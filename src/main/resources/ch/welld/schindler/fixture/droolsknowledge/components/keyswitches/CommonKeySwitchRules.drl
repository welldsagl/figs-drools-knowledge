package ch.welld.schindler.fixture.droolsknowledge.components.keyswitches;

import java.util.Map;
import java.util.HashMap;
import ch.welld.schindler.fixture.droolsknowledge.materials.CableRequest;

rule "COP KeySwitch Cables"
    when
        KeySwitchConfiguration( componentType == "COP" ) or CableRequest()
    then
end

rule "LOP K KeySwitch Cables"
    when
        KeySwitchConfiguration( componentType == "LOP-K" ) or CableRequest()
    then
end

rule "LOP K KeySwitch Critical"
    when
        KeySwitchConfiguration( componentType == "LOP-K", critical == true )
    then
end

rule "DT AT KeySwitch"
    when
        KeySwitchConfiguration( fixtureFamily in ( "DT", "AT" ) )
    then
end

rule "MT KeySwitch"
    when
        KeySwitchConfiguration( fixtureFamily == "MT" )
    then
end

rule "GST KeySwitch"
    when
        KeySwitchConfiguration( fixtureFamily == "GST" )
    then
end

function Map<String, Object> createKeySwitchMetadata(KeySwitchConfiguration config) {
    Map<String, Object> m = new HashMap<String, Object>();
    m.put("engraving", config.getEngraving());
    m.put("function", config.getKeyFunction());
    m.put("position", config.getPosition());
    return m;
}

function Map<String, Object> createCriticalCableMetadata(KeySwitchConfiguration config) {
    Map<String, Object> m = new HashMap<String, Object>();
    m.put("position", config.getPosition());
    return m;
}