package ch.welld.schindler.fixture.droolsknowledge.components.fixtures;

import java.util.Map;
import java.util.HashMap;

rule "DT Buttons"
    when
        FixtureConfiguration( fixtureFamily == "DT" )
    then
end

rule "DT2 Buttons" extends "DT Buttons"
    when
        FixtureConfiguration( fixtureSubfamily == "DT2" )
    then
end

rule "DT4 Buttons" extends "DT Buttons"
    when
        FixtureConfiguration( fixtureSubfamily == "DT4" )
    then
end

rule "DT8 Buttons" extends "DT Buttons"
    when
        FixtureConfiguration( fixtureSubfamily == "DT8" )
    then
end

rule "DT4 Push Floor Buttons" extends "DT4 Buttons"
    when
        FixtureConfiguration( fixtureType == "PUSH_FLOOR" )
    then
end

rule "DT4 Push Door Buttons" extends "DT4 Buttons"
    when
        FixtureConfiguration( fixtureType == "PUSH_DOOR" )
    then
end

rule "DT4 Push Main Floor Buttons" extends "DT4 Buttons"
    when
        FixtureConfiguration( fixtureType == "PUSH_MAIN" )
    then
end

rule "DT4 Alarm Buttons" extends "DT4 Buttons"
    when
        FixtureConfiguration( fixtureType == "ALARM" )
    then
end

rule "AT Buttons"
    when
        FixtureConfiguration( fixtureFamily == "AT" )
    then
end

rule "AT Push Floor Door Buttons" extends "AT Buttons"
    when
        FixtureConfiguration( fixtureType in ( "PUSH_DOOR", "PUSH_MAIN" ) )
    then
end

rule "AT Push Floor Buttons" extends "AT Buttons"
    when
        FixtureConfiguration( fixtureType == "PUSH_FLOOR" )
    then
end

rule "AT Alarm Buttons" extends "AT Buttons"
    when
        FixtureConfiguration( fixtureType == "ALARM" )
    then
end

function Map<String, Object> createLabelMetadata(FixtureConfiguration config) {
    Map<String, Object> m = new HashMap<String, Object>();
    switch (config.getFixtureType()) {
        case "ALARM":
            m.put("label", "ðŸ””");
            break;
        case "PUSH_DOOR":
            m.put("label", config.getDoorButtonType().equals("OPEN") ? "â—€|â–¶" : "â–¶|â—€");
            break;
        default:
            m.put("label", config.getLabel());
            break;
    }
    return m;
}